/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "../utils/scaffold-eth/contract";

const deployedContracts = {
  17000: {
    ConstantInitialVoiceCreditProxy: {
      address: "0x5c83422D862773ac9D8FAD8883b95B97c5aA2825",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_balance",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "getVoiceCredits",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381589,
    },
    DestinationPrivote: {
      address: "0xee0f8ED0c1c13d8D0E250C96416E2Cd8bd8c001d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "router",
              type: "address",
            },
            {
              internalType: "address",
              name: "privoteAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "FailedToWithdrawEth",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "router",
              type: "address",
            },
          ],
          name: "InvalidRouter",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "latestMessageId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "uint64",
              name: "latestSourceChainSelector",
              type: "uint64",
            },
            {
              indexed: false,
              internalType: "address",
              name: "latestSender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "latestMessage",
              type: "string",
            },
          ],
          name: "MessageReceived",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "messageId",
                  type: "bytes32",
                },
                {
                  internalType: "uint64",
                  name: "sourceChainSelector",
                  type: "uint64",
                },
                {
                  internalType: "bytes",
                  name: "sender",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "token",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "amount",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Client.EVMTokenAmount[]",
                  name: "destTokenAmounts",
                  type: "tuple[]",
                },
              ],
              internalType: "struct Client.Any2EVMMessage",
              name: "message",
              type: "tuple",
            },
          ],
          name: "ccipReceive",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getLatestMessageDetails",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getRouter",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "privote",
          outputs: [
            {
              internalType: "contract IPrivote",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "withdrawToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deploymentBlockNumber: 2381607,
    },
    FreeForAllGatekeeper: {
      address: "0x7089E0264B290097FddAdcF45A2048B4Af26416C",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "getTrait",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "register",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_maci",
              type: "address",
            },
          ],
          name: "setMaciInstance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381590,
    },
    MessageProcessorFactory: {
      address: "0x2939B5639B08b5473CD46903e328820A1d931c6E",
      abi: [
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "messageProcessorAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381598,
    },
    PollFactory: {
      address: "0x71853272B87C8B1b0aEF4eF643B152F8dD9Bde0D",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_maci",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_emptyBallotRoot",
              type: "uint256",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "pollAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381597,
    },
    PoseidonT3: {
      address: "0xdF131FD0209C0fB15eaE4bc024420A17d0857c0f",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "input",
              type: "uint256[2]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381592,
    },
    PoseidonT4: {
      address: "0xdA921Eb4D716B11b4C9b46Cb16Bfb07803ec5777",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[3]",
              name: "input",
              type: "uint256[3]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381593,
    },
    PoseidonT5: {
      address: "0x41115a390785B2e4E0Cb2Fb3B60ca1BD66eD1349",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[4]",
              name: "input",
              type: "uint256[4]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381595,
    },
    PoseidonT6: {
      address: "0xd5500b41Bba195a5f05772146E164624d18dba3E",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[5]",
              name: "input",
              type: "uint256[5]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381596,
    },
    Privote: {
      address: "0xc5fAe8532bc8445A965b845462b07e095F2b486e",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IPollFactory",
              name: "_pollFactory",
              type: "address",
            },
            {
              internalType: "contract IMessageProcessorFactory",
              name: "_messageProcessorFactory",
              type: "address",
            },
            {
              internalType: "contract ITallyFactory",
              name: "_tallyFactory",
              type: "address",
            },
            {
              internalType: "contract SignUpGatekeeper",
              name: "_signUpGatekeeper",
              type: "address",
            },
            {
              internalType: "contract InitialVoiceCreditProxy",
              name: "_initialVoiceCreditProxy",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "_stateTreeDepth",
              type: "uint8",
            },
            {
              internalType: "uint256[5]",
              name: "_emptyBallotRoots",
              type: "uint256[5]",
            },
            {
              internalType: "uint256",
              name: "_stake",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_slashThreshold",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "DefaultZeroBadIndex",
          type: "error",
        },
        {
          inputs: [],
          name: "DepthTooLarge",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidCaller",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidMessage",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidPubKey",
          type: "error",
        },
        {
          inputs: [],
          name: "NumberOfLeavesCannotBeZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
          ],
          name: "PollAddressDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          name: "PollDoesNotExist",
          type: "error",
        },
        {
          inputs: [],
          name: "PoseidonHashLibrariesNotLinked",
          type: "error",
        },
        {
          inputs: [],
          name: "PubKeyAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "TooManySignups",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_coordinatorPubKeyX",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_coordinatorPubKeyY",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "DeployPoll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              indexed: false,
              internalType: "struct MACI.PollContracts",
              name: "pollContracts",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string[]",
              name: "options",
              type: "string[]",
            },
            {
              indexed: false,
              internalType: "string",
              name: "metadata",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "authType",
              type: "string",
            },
          ],
          name: "PollCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "pollDeployer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "PollDeployerSlashed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "tallyJsonCID",
              type: "string",
            },
          ],
          name: "PollTallyCIDUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_stateIndex",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_userPubKeyX",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_userPubKeyY",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_voiceCreditBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_timestamp",
              type: "uint256",
            },
          ],
          name: "SignUp",
          type: "event",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "_options",
              type: "string[]",
            },
            {
              internalType: "string",
              name: "_metadata",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "isQv",
              type: "uint8",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "authType",
              type: "string",
            },
          ],
          name: "createPoll",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deployPoll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "emptyBallotRoots",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
          ],
          name: "fetchPoll",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "bytes",
                  name: "encodedOptions",
                  type: "bytes",
                },
                {
                  internalType: "string",
                  name: "metadata",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "poll",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "messageProcessor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "tally",
                      type: "address",
                    },
                  ],
                  internalType: "struct MACI.PollContracts",
                  name: "pollContracts",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "numOfOptions",
                  type: "uint256",
                },
                {
                  internalType: "string[]",
                  name: "options",
                  type: "string[]",
                },
                {
                  internalType: "string",
                  name: "tallyJsonCID",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct DomainObjs.PubKey",
                  name: "coordinatorPubKey",
                  type: "tuple",
                },
                {
                  internalType: "address",
                  name: "pollDeployer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "slashThreshold",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "authType",
                  type: "string",
                },
              ],
              internalType: "struct Privote.PollData",
              name: "poll_",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_page",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_perPage",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_ascending",
              type: "bool",
            },
          ],
          name: "fetchPolls",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "bytes",
                  name: "encodedOptions",
                  type: "bytes",
                },
                {
                  internalType: "string",
                  name: "metadata",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "poll",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "messageProcessor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "tally",
                      type: "address",
                    },
                  ],
                  internalType: "struct MACI.PollContracts",
                  name: "pollContracts",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "numOfOptions",
                  type: "uint256",
                },
                {
                  internalType: "string[]",
                  name: "options",
                  type: "string[]",
                },
                {
                  internalType: "string",
                  name: "tallyJsonCID",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct DomainObjs.PubKey",
                  name: "coordinatorPubKey",
                  type: "tuple",
                },
                {
                  internalType: "address",
                  name: "pollDeployer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "slashThreshold",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "authType",
                  type: "string",
                },
              ],
              internalType: "struct Privote.PollData[]",
              name: "polls_",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
          ],
          name: "getPoll",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              internalType: "struct MACI.PollContracts",
              name: "pollContracts",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
          ],
          name: "getPollId",
          outputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getStateTreeRoot",
          outputs: [
            {
              internalType: "uint256",
              name: "root",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "array",
              type: "uint256[2]",
            },
          ],
          name: "hash2",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[3]",
              name: "array",
              type: "uint256[3]",
            },
          ],
          name: "hash3",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[4]",
              name: "array",
              type: "uint256[4]",
            },
          ],
          name: "hash4",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[5]",
              name: "array",
              type: "uint256[5]",
            },
          ],
          name: "hash5",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "left",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "right",
              type: "uint256",
            },
          ],
          name: "hashLeftRight",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256[10]",
                  name: "data",
                  type: "uint256[10]",
                },
              ],
              internalType: "struct DomainObjs.Message",
              name: "_message",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_encPubKey",
              type: "tuple",
            },
          ],
          name: "hashMessageAndEncPubKey",
          outputs: [
            {
              internalType: "uint256",
              name: "msgHash",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct DomainObjs.PubKey",
                  name: "pubKey",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "voiceCreditBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.StateLeaf",
              name: "_stateLeaf",
              type: "tuple",
            },
          ],
          name: "hashStateLeaf",
          outputs: [
            {
              internalType: "uint256",
              name: "ciphertext",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "initialVoiceCreditProxy",
          outputs: [
            {
              internalType: "contract InitialVoiceCreditProxy",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "isPublicKeyRegistered",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lazyIMTData",
          outputs: [
            {
              internalType: "uint40",
              name: "maxIndex",
              type: "uint40",
            },
            {
              internalType: "uint40",
              name: "numberOfLeaves",
              type: "uint40",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "maxSignups",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "messageProcessorFactory",
          outputs: [
            {
              internalType: "contract IMessageProcessorFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextPollId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "numSignUps",
          outputs: [
            {
              internalType: "uint256",
              name: "signUps",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "dataToPad",
              type: "uint256[2]",
            },
          ],
          name: "padAndHashMessage",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256[10]",
                  name: "data",
                  type: "uint256[10]",
                },
              ],
              internalType: "struct DomainObjs.Message",
              name: "message",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "padKey",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "msgHash",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "pollFactory",
          outputs: [
            {
              internalType: "contract IPollFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "pollIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "polls",
          outputs: [
            {
              internalType: "address",
              name: "poll",
              type: "address",
            },
            {
              internalType: "address",
              name: "messageProcessor",
              type: "address",
            },
            {
              internalType: "address",
              name: "tally",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "array",
              type: "uint256[]",
            },
          ],
          name: "sha256Hash",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_pubKey",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "_signUpGatekeeperData",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "_initialVoiceCreditProxyData",
              type: "bytes",
            },
          ],
          name: "signUp",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "signUpGatekeeper",
          outputs: [
            {
              internalType: "contract SignUpGatekeeper",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
          ],
          name: "slashPollDeployer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "slashThreshold",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "stake",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "stakes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "stateTreeDepth",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tallyFactory",
          outputs: [
            {
              internalType: "contract ITallyFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "treeDepths",
          outputs: [
            {
              internalType: "uint8",
              name: "intStateTreeDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "messageTreeSubDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "messageTreeDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "voteOptionTreeDepth",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_tallyJsonCID",
              type: "string",
            },
          ],
          name: "updatePollTallyCID",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "verifier",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "vkRegistry",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        MESSAGE_DATA_LENGTH: "maci-contracts/contracts/MACI.sol",
        deployPoll: "maci-contracts/contracts/MACI.sol",
        emptyBallotRoots: "maci-contracts/contracts/MACI.sol",
        getPoll: "maci-contracts/contracts/MACI.sol",
        getStateTreeRoot: "maci-contracts/contracts/MACI.sol",
        hash2: "maci-contracts/contracts/MACI.sol",
        hash3: "maci-contracts/contracts/MACI.sol",
        hash4: "maci-contracts/contracts/MACI.sol",
        hash5: "maci-contracts/contracts/MACI.sol",
        hashLeftRight: "maci-contracts/contracts/MACI.sol",
        hashMessageAndEncPubKey: "maci-contracts/contracts/MACI.sol",
        hashStateLeaf: "maci-contracts/contracts/MACI.sol",
        initialVoiceCreditProxy: "maci-contracts/contracts/MACI.sol",
        lazyIMTData: "maci-contracts/contracts/MACI.sol",
        maxSignups: "maci-contracts/contracts/MACI.sol",
        messageProcessorFactory: "maci-contracts/contracts/MACI.sol",
        nextPollId: "maci-contracts/contracts/MACI.sol",
        numSignUps: "maci-contracts/contracts/MACI.sol",
        padAndHashMessage: "maci-contracts/contracts/MACI.sol",
        pollFactory: "maci-contracts/contracts/MACI.sol",
        polls: "maci-contracts/contracts/MACI.sol",
        sha256Hash: "maci-contracts/contracts/MACI.sol",
        signUp: "maci-contracts/contracts/MACI.sol",
        signUpGatekeeper: "maci-contracts/contracts/MACI.sol",
        stateTreeDepth: "maci-contracts/contracts/MACI.sol",
        tallyFactory: "maci-contracts/contracts/MACI.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deploymentBlockNumber: 2381601,
    },
    SourcePrivote: {
      address: "0x5B1Fb5AE5738f619C799Daa3BfFD81544328Adf1",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "router",
              type: "address",
            },
            {
              internalType: "address",
              name: "link",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "FailedToWithdrawEth",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          name: "MessageSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_pubKey",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "_signUpGatekeeperData",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "_initialVoiceCreditProxyData",
              type: "bytes",
            },
            {
              internalType: "enum SourcePrivote.PayFeesIn",
              name: "payFeesIn",
              type: "uint8",
            },
          ],
          name: "signup",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256[10]",
                  name: "data",
                  type: "uint256[10]",
                },
              ],
              internalType: "struct DomainObjs.Message",
              name: "messageText",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "encPubKey",
              type: "tuple",
            },
            {
              internalType: "enum SourcePrivote.PayFeesIn",
              name: "payFeesIn",
              type: "uint8",
            },
          ],
          name: "vote",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "withdrawToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
      deploymentBlockNumber: 2381608,
    },
    TallyFactory: {
      address: "0x60BBfed1D19253F62F854798Db16355EF61099FA",
      abi: [
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
            {
              internalType: "address",
              name: "_messageProcessor",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "tallyAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381599,
    },
    Verifier: {
      address: "0xcD198D1aD7465bacfEd4B3d9E4842C4392dB89Aa",
      abi: [
        {
          inputs: [],
          name: "InvalidInputVal",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidProofQ",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingAddFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingMulFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingOpcodeFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PRIME_Q",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[8]",
              name: "_proof",
              type: "uint256[8]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
            {
              internalType: "uint256[]",
              name: "inputs",
              type: "uint256[]",
            },
          ],
          name: "verify",
          outputs: [
            {
              internalType: "bool",
              name: "isValid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381591,
    },
    VkRegistry: {
      address: "0x378035b443B725f2820ea6Da3FAFc3b57d45e77a",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidKeysParams",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ProcessVkAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "ProcessVkNotSet",
          type: "error",
        },
        {
          inputs: [],
          name: "SubsidyVkNotSet",
          type: "error",
        },
        {
          inputs: [],
          name: "TallyVkAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "TallyVkNotSet",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "ProcessVkSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "TallyVkSet",
          type: "event",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
          ],
          name: "genProcessVkSig",
          outputs: [
            {
              internalType: "uint256",
              name: "sig",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
          ],
          name: "genTallyVkSig",
          outputs: [
            {
              internalType: "uint256",
              name: "sig",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getProcessVk",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getProcessVkBySig",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getTallyVk",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getTallyVkBySig",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "hasProcessVk",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "hasTallyVk",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "isProcessVkSet",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "isTallyVkSet",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "_processVk",
              type: "tuple",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "_tallyVk",
              type: "tuple",
            },
          ],
          name: "setVerifyingKeys",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode[]",
              name: "_modes",
              type: "uint8[]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey[]",
              name: "_processVks",
              type: "tuple[]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey[]",
              name: "_tallyVks",
              type: "tuple[]",
            },
          ],
          name: "setVerifyingKeysBatch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 2381603,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
